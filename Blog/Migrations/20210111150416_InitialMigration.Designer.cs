// <auto-generated />
using System;
using Blog.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Blog.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210111150416_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Blog.Models.BlogPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Introduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<string>("SubTitle")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.ToTable("BlogPosts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Nikolaos Kalogeropoulos",
                            Content = "To fight this feeling you have to be very brave with yourself and others and and and nad To fight this feeling you have to be very brave with yourself and others and and and nad To fight this feeling you have to be very brave with yourself and others and and and nad To fight this feeling you have to be very brave with yourself and others and and and nad To fight this feeling you have to be very brave with yourself and others and and and nad",
                            Introduction = "The feeling of being lonely is something many people have experienced, in this blog post I will explain how you can fight this feeling of loneliness",
                            Likes = 0,
                            SubTitle = "An ode to a very strange existance",
                            Title = "To be or not to be"
                        },
                        new
                        {
                            Id = 2,
                            Author = "John Wick",
                            Content = "To fight this feeling you have to be very brave with yourself and others and and and nad To fight this feeling you have to be very brave with yourself and others and and and nad To fight this feeling you have to be very brave with yourself and others and and and nad To fight this feeling you have to be very brave with yourself and others and and and nad To fight this feeling you have to be very brave with yourself and others and and and nad",
                            Introduction = "The feeling of killing  is something many people have experienced, in this blog post I will explain how you can fight this feeling of killing",
                            Likes = 0,
                            SubTitle = "An ode to a very strange killing",
                            Title = "To kill or not to kill"
                        });
                });

            modelBuilder.Entity("Blog.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BlogPostId")
                        .HasColumnType("int");

                    b.Property<string>("CommentMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BlogPostId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Blog.Models.Comment", b =>
                {
                    b.HasOne("Blog.Models.BlogPost", "BlogPost")
                        .WithMany()
                        .HasForeignKey("BlogPostId");

                    b.Navigation("BlogPost");
                });
#pragma warning restore 612, 618
        }
    }
}
